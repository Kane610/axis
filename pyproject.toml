

[tool.coverage.report]
fail_under = 95
exclude_also = [
    "if TYPE_CHECKING:"
]

[tool.isort]
# https://github.com/PyCQA/isort/wiki/isort-Settings
profile = "black"
# will group `import x` and `from x import` of the same module.
force_sort_within_sections = true
known_first_party = ["axis", "tests"]
forced_separate = ["tests"]
combine_as_imports = true

[tool.pytest.ini_options]
addopts = "--cov=axis --cov-report term-missing"
asyncio_mode = "auto"
log_cli = false
log_cli_level = "DEBUG"
testpaths = ["tests"]

[tool.ruff]
target-version = "py310"
select = [
    "I", # isort
    "ICN001", # import concentions; {name} should be imported as {asname}
    "ISC001", # Implicitly concatenated string literals on one line
    "PGH001", # No builtin eval() allowed
    "PGH004",  # Use specific rule codes when using noqa
    "PLC0414", # Useless import alias. Import alias does not rename original package.
    "PLC", # pylint
    "PLE", # pylint
    "PLR", # pylint
    "PLW", # pylint
    "RUF006", # Store a reference to the return value of asyncio.create_task
    "UP",  # pyupgrade
    "W",   # pycodestyle
]

ignore = [
    # "D202",  # No blank lines allowed after function docstring
    # "D203",  # 1 blank line required before class docstring
    # "D206",  # Checks for docstrings that are indented with tabs
    # "D213",  # Multi-line docstring summary should start at the second line
    # "E501",  # Checks for lines that exceed the specified maximum character length
    # "ISC001",  # Implicitly concatenated string literals on one line
    "PLR0911",  # Too many return statements
    "PLR0912",  # Maximum number of branches allowed for a function or method body
    "PLR0913",  # Too many arguments to function call ({c_args} > {max_args})
    "PLR0915",  # Too many statements ({statements} > {max_statements})
    "PLR2004",  # Magic value used in comparison, consider replacing {value} with a constant variable
    # "W191",  # Checks for indentation that uses tabs
]

[tool.ruff.flake8-pytest-style]
fixture-parentheses = false

[tool.ruff.isort]
force-sort-within-sections = true
known-first-party = ["axis"]
combine-as-imports = true

[tool.ruff.mccabe]
max-complexity = 12
